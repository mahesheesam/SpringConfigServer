import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

class CommonUtilTest {

    @Mock
    private ObjectMapper objectMapper;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    void testGetObjectMapper() {
        // Assert that the getObjectMapper method returns a non-null ObjectMapper instance
        ObjectMapper mapper = CommonUtil.getObjectMapper();
        assertNotNull(mapper);
    }

    @Test
    void testGetString_Success() throws Exception {
        // Mock the object to test
        Object testObject = new Object();
        String expectedJson = "{\"key\":\"value\"}";

        // Mock the writeValueAsString behavior
        when(CommonUtil.getObjectMapper().writeValueAsString(testObject)).thenReturn(expectedJson);

        // Test the getString method
        String result = CommonUtil.getString(testObject);

        // Validate the result
        assertEquals(expectedJson, result);
    }

    @Test
    void testGetString_Exception() throws Exception {
        // Mock the object to test
        Object testObject = new Object();

        // Simulate a failure in writeValueAsString
        when(CommonUtil.getObjectMapper().writeValueAsString(testObject)).thenThrow(new RuntimeException("Error"));

        // Test the getString method
        String result = CommonUtil.getString(testObject);

        // Validate that the method handles the exception and returns an empty string
        assertEquals("", result);
    }
}
