@RunWith(SpringRunner.class)
@SpringBootTest(classes = KafkaConsumerConfig.class)
public class KafkaConsumerConfigTest {

    @Autowired
    private KafkaConsumerConfig kafkaConsumerConfig;

    @MockBean
    private ConsumerFactory<String, String> consumerFactory;

    @Test
    public void testConsumerConfigs() {
        Map<String, Object> consumerConfigs = kafkaConsumerConfig.consumerConfigs();
        
        // Verify that the properties are set correctly
        assertEquals("localhost:9092", consumerConfigs.get(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG));
        assertEquals(StringDeserializer.class, consumerConfigs.get(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG));
        assertEquals(StringDeserializer.class, consumerConfigs.get(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG));
        assertEquals("group-id", consumerConfigs.get(ConsumerConfig.GROUP_ID_CONFIG));
        assertEquals("earliest", consumerConfigs.get(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG));
    }

    @Test
    public void testConsumerFactory() {
        // Verify that the consumerFactory bean is created with the proper configurations
        ConsumerFactory<String, String> consumerFactory = kafkaConsumerConfig.consumerFactory();
        assertNotNull(consumerFactory);
    }

    @Test
    public void testKafkaListenerContainerFactory() {
        // Verify that the ConcurrentKafkaListenerContainerFactory bean is created properly
        ConcurrentKafkaListenerContainerFactory<String, String> factory = kafkaConsumerConfig.kafkaListenerContainerFactory();
        assertNotNull(factory);
        assertEquals(consumerFactory, factory.getConsumerFactory());
    }
}
